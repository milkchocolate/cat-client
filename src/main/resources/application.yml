server:
  servlet:
    context-path: /cat-client
  error:
    whitelabel:
      enabled: false
    include-exception: true
    include-stacktrace: always

management:
  endpoints:
    web:
      exposure:
        include: "*"
spring:
  profiles:
    active: local
  security:
    oauth2:
      client:
        registration:
          cat-client:
            client-id: cat-client

#            Spring OAuth2 PKCE trigger:
#            1. client-secret is omitted (or empty)
#            2. client-authentication-method is set to "none" (ClientAuthenticationMethod.NONE)
#            By applying the settings, when exchanging an access token with a refresh token,
#            the request won't have the Authorization header.

#            Keycloak always needs client id in Authorization header even with PKCE

#            client-secret is omitted (or empty) and the method is basic,
#            Spring OAuth2 client uses code flow without PKCE. Keycloak
#            When the client is set to Public in Keycloak, Keycloak token endpoint doesn't check the client-secret.
            client-authentication-method: basic

            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/cat-client"
            scope: profile
        provider:
          cat-client:
            authorization-uri: http://host.docker.internal:11001/auth/realms/master/protocol/openid-connect/auth
            token-uri: http://host.docker.internal:11001/auth/realms/master/protocol/openid-connect/token
            user-info-uri: http://host.docker.internal:11001/auth/realms/master/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username

